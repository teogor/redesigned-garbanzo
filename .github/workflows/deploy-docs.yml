name: Docs Deployment

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pages: write
  id-token: write
  pull-requests: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "api-docs"
  cancel-in-progress: false

env:
  OWNER: teogor
  DESTINATION_BRANCH: docs/teogor/${{ github.event.repository.name }}/${{ github.sha }}
  REPOSITORY: ${{ github.event.repository.name }}
  REPO: teogor/${{ github.event.repository.name }}
  DISPLAY_NAME: Ceres

jobs:
  compare-commits:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3
        with:
          repository: teogor/ceres

      # Install the octokit library
      - name: Install octokit
        run: npm install octokit

      # Get the commit SHA of the tag
      - name: Get tag commit SHA
        id: get-tag-sha
        run: |
          echo "::set-output name=tag_sha::<span class="math-inline">\(git rev\-parse 1\.0\.0\-alpha03\)"
          \# Get the commit SHA of the root of the folder
          \- name\: Get folder commit SHA
          id\: get\-folder\-sha
          run\: \|
          echo "\:\:set\-output name\=folder\_sha\:\:</span>(git rev-parse ui)"

      - name: Compare tag and folder
        id: compare
        run: |
          python compare_tag_folder.py
          echo "Number of different commits: ${{ steps.compare.outputs.commit_count }}"

      - name: Display commit count
        run: |
          echo "Number of different commits: ${{ steps.compare.outputs.commit_count }}"
          